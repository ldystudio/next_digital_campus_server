user  nginx;
worker_processes  1;

pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}
http {
    include  /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile  on;
    keepalive_timeout  65;
    include  /etc/nginx/conf.d/*.conf;

    upstream websocket {
        server unix:///code/server/websocket.sock;
    }

    server {
        listen 8000;
        listen [::]:8000;
        server_name 0.0.0.0;
        charset UTF-8;
        client_max_body_size 75M;

        #定义nginx log的保持文件
        access_log  /var/log/nginx/access.log;
        error_log   /var/log/nginx/error.log;

        location / {
            # 通过uwsgi转发请求
            include uwsgi_params;
            # 监听 8080 端口，与 uwsgi.ini 里的 socket 设置成同一个端口
            uwsgi_pass 服务器IP地址:8080;
            # 设置 uwsgi 请求超时时间
            uwsgi_read_timeout 150;
        }

        location /static {
            # 开启目录列表
            autoindex on;
            # 静态文件目录，STATIC_ROOT 指定的目录
            alias /code/media;
        }

        location /ws {
            proxy_pass http://websocket;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_read_timeout  36000s;
            proxy_send_timeout  36000s;
        }
    }
}
